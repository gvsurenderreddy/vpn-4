<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.lliira.vpn.model.dao.mapper.UserMapper">
  
	<resultMap type="User" id="UserMap">
		<result property="id" column="user_id" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="signature" column="signature" />
		<result property="activated" column="activated" />
		<result property="activationCode" column="activation_code" />
		<result property="registeredTime" column="registered_time" />
		<result property="activatedTime" column="activated_time" />
		<result property="lastLoginTime" column="last_login_time" />
    <result property="referral" column="referral" />
    <result property="blocked" column="blocked" />
	</resultMap>
    
  <resultMap type="Server" id="ServerMap">
    <constructor>
      <idArg column="server_id" javaType="_int" />
    </constructor>
    <result property="ip" column="server_ip" />
    <result property="forPublic" column="for_public" />
    <result property="forRegisteredUsers" column="for_registered" />
    <result property="forPurchasedUsers" column="for_purchased" />
    <result property="description" column="description" />
  </resultMap>

	<select id="selectAllUsers" resultMap="UserMap">
    <![CDATA[
        SELECT u.* FROM ${schema}users u
    ]]>
	</select>

	<select id="selectUsersByActivation" parameterType="boolean"
		resultMap="UserMap">
    <![CDATA[
        SELECT u.* FROM ${schema}users u WHERE u.activated = #{activated}
    ]]>
	</select>

	<select id="selectUserById" parameterType="int" resultMap="UserMap">
    <![CDATA[
        SELECT u.* FROM ${schema}users u WHERE u.user_id = #{id}
    ]]>
	</select>

	<select id="selectUserBySignature" parameterType="string"
		resultMap="UserMap">
    <![CDATA[
        SELECT u.* FROM ${schema}users u WHERE u.signature = #{signature}
    ]]>
	</select>

	<select id="selectUserByEmail" parameterType="string" resultMap="UserMap">
    <![CDATA[
        SELECT u.* FROM ${schema}users u WHERE u.email = #{email}
    ]]>
	</select>

  <select id="selectUserRoles" parameterType="User" resultType="string">
    <![CDATA[
        SELECT role_name FROM ${schema}user_roles WHERE user_id = #{id}
    ]]>
  </select>

	<insert id="insertUserLog" parameterType="UserLog">
    <![CDATA[
        INSERT INTO ${schema}user_logs (user_id, log_time, log_type, message)
        VALUES (#{userId}, #{logTime}, #{type}, #{message})
    ]]>
	</insert>

	<insert id="insertUser" parameterType="User" useGeneratedKeys="true"
		keyProperty="id" keyColumn="user_id">
    <![CDATA[
        INSERT INTO ${schema}users 
               (email, password, signature, activation_code, 
                referral, activated, blocked,
                registered_time, activated_time, last_login_time)
        VALUES (#{email}, #{password}, #{signature}, #{activationCode}, 
                #{referral}, #{activated}, #{blocked},
                #{registeredTime}, #{activatedTime}, #{lastLoginTime})
    ]]>
	</insert>

	<update id="updateUser" parameterType="User">
    <![CDATA[
        UPDATE ${schema}users
        SET email = #{email}, password = #{password}, signature = #{signature}, 
            activated_time = #{activatedTime}, last_login_time = #{lastLoginTime},
            activated = #{activated}, activation_code = #{activationCode},
            registered_time = #{registeredTime}, blocked = #{blocked}
        WHERE user_id = #{id}
    ]]>
	</update>

	<delete id="deleteUser" parameterType="int">
  <![CDATA[
    DELETE FROM ${schema}users WHERE user_id = #{id}
  ]]>
	</delete>

  <select id="selectBlackLists" resultType="string">
    <![CDATA[
        SELECT pattern FROM ${schema}black_lists
    ]]>
  </select>

  <select id="selectServers" resultMap="ServerMap">
    <![CDATA[
        SELECT s.* FROM ${schema}servers s
    ]]>
  </select>


  <select id="selectIsPurchased" parameterType="int" resultType="boolean">
    <![CDATA[
      SELECT EXISTS(SELECT bp.user_id FROM bandwidth_purchased bp WHERE bp.user_id = u.user_id)
      FROM users u
      WHERE user_id = #{id}
    ]]>
  </select>

</mapper>